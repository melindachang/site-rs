---
import BaseLayout from '../layouts/BaseLayout.astro'
import { getCollection } from 'astro:content'
import { emphasizePreps, formatRawDate } from '../utils'

import arrowSvg from '../assets/arrow.svg?raw'

let notes = await getCollection('notes')
notes = notes.sort((a, b) => b.data.date.getTime() - a.data.date.getTime())
---

<BaseLayout>
  <Fragment name="head">
    <title>Notes | Melinda Chang</title>
  </Fragment>
  <!-- <header class="header"> -->
  <!--   <h1 class="header__title">Notes</h1> -->
  <!--   <p class="header__caption"> -->
  <!--     I try to post here on occasion. In order of likelihood: (1) software, (2) -->
  <!--     what I'm reading, (3) what I think you should be reading, (4) anything -->
  <!--     else. Consider subscribing via RSS. -->
  <!--   </p> -->
  <!-- </header> -->
  <!-- <article class="notes"> -->
  <!--   { -->
  <!--     notes.map(note => { -->
  <!--       if (note.data.published) { -->
  <!--         return ( -->
  <!--           <a class="notes__entry" href={`/notes/${note.slug}`}> -->
  <!--             <i class="notes__entry__icon"> -->
  <!--               <Fragment set:html={arrowSvg} /> -->
  <!--             </i> -->
  <!--             <h2 class="notes__entry__title">{note.data.title}</h2> -->
  <!--             <div class="notes__entry__metadata"> -->
  <!--               <h3 class="notes__entry__byline"> -->
  <!--                 {formatRawDate(note.data.date)} -->
  <!--                 {note.data.summary && `Â· ${note.data.summary}`} -->
  <!--               </h3> -->
  <!--               {note.data.tags && ( -->
  <!--                 <div class="notes__entry__tags"> -->
  <!--                   {note.data.tags.map(tag => ( -->
  <!--                     <span class="notes__entry__tag">{tag}</span> -->
  <!--                   ))} -->
  <!--                 </div> -->
  <!--               )} -->
  <!--             </div> -->
  <!--           </a> -->
  <!--         ) -->
  <!--       } -->
  <!--     }) -->
  <!--   } -->
  <!-- </article> -->
</BaseLayout>

<style lang="scss">
  .header {
    padding: 3rem 2.2rem 0;

    &__title {
      margin: 0 0 2rem;
      line-height: 0.84;
      font-family: var(--font-title);
      font-size: 8.8vw;
      letter-spacing: -0.05em;
    }

    &__caption {
      line-height: 1.3;
      margin-top: 12rem;
      font-size: 1.3rem;
      font-family: var(--font-monospace);
      text-transform: uppercase;
      width: 35%;
    }
  }

  .notes {
    display: flex;
    flex-direction: column;
    padding: 1.6rem 2.2rem 2.2rem;
    width: 100%;

    &__entry {
      padding-top: 1.6rem;
      border-top: 1px dashed rgba(0, 0, 0, 0.2);
      text-decoration: none;
      position: relative;

      &:hover {
        background-color: var(--clr-primary);
        color: var(--clr-primary-inverted);

        .notes__entry__tag {
          border: 1px dotted var(--clr-primary-inverted);
        }
      }

      &:last-child {
        border-bottom: 1px dashed rgba(0, 0, 0, 0.2);
      }

      &__icon {
        position: absolute;
        right: 0;
        top: 1.6rem;
      }

      &__title {
        font-family: var(--font-title);
        letter-spacing: -0.03em;
        line-height: 100%;
        padding-right: 2rem;
        font-size: calc(28.3855px + 0.903615svw);
        position: relative;
      }

      &__metadata {
        display: flex;
        justify-content: space-between;
        align-items: baseline;
        padding: 2rem 0;

        font-family: var(--font-monospace);
        font-size: 1.3rem;
        letter-spacing: -0.03em;
        text-transform: uppercase;
      }

      &__tags {
        display: flex;
        gap: 4px;
      }

      &__tag {
        display: inline-block;
        border: 1px dotted var(--clr-primary);
        border-radius: 3px;
        padding: 1px 4px;
      }
    }
  }
</style>
